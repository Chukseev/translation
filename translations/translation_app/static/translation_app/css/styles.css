/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
    margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    margin-left: 0;
    padding: 0;
    border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
    list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями
 */
img {
    display: block;
    max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    height: 100%;
    /**
      Плавный скролл
     */
    scroll-behavior: smooth;
}

body {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    min-height: 100%;
    /**
      Унифицированный интерлиньяж
     */
    line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] { fill: currentColor }
svg *[stroke] { stroke: currentColor }

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
    transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

@font-face {
    font-family: 'Oswald';
    src: url('../fonts/Oswald-Regular.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Roboto Mono';
    src: url('../fonts/RobotoMono-Regular.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Roboto Mono';
    src: url('../fonts/RobotoMono-Italic.woff2') format('woff2');
    font-weight: normal;
    font-style: italic;
    font-display: swap;
}





.visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    border: 0 !important;
    padding: 0 !important;
    white-space: nowrap !important;
    clip-path: inset(100%) !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
}

:root {
    /*--color-dark: #000000;*/
    /*--color-dark-alternate: #131619;*/
    /*--color-light: #FFFFFF;*/
    /*--color-dark-gray: #404040;*/
    /*--color-light-gray: #C4C4C4;*/

    --transition-duration: 0.2s;
}

body * {
    /*outline: red 1px solid;*/
}

a {
    text-decoration: none;
}

body {
    width: 100%;
    display: flex;
    flex-direction: column;
    font-family: "Roboto Mono";

}

.content {
    flex-grow: 1;
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-inline: 10px;
    min-height: 80px;
}

.header__menu {
    position: relative;
    display: inline-block;
}



.header__menu-list {
    display: block;
    opacity: 100;
    visibility: visible;
    pointer-events: none;
    position: absolute;
    right: -4px;
    /*transition-delay: 2s;*/
    transition-duration: 0.5s;
    transform: translateY(-50%);


}

.header__menu:hover .header__menu-list {
    visibility: visible;
    pointer-events: visible;
    display: block;
    opacity: 100%;
    transform: translateY(0%);
}

.header__menu-item {
    text-align: center;

    border: 1px solid #000;
    background-color: #fff;
}

.header__menu-link {
    padding: 10px 25px;
    display: block;
}



.header__menu-toggle {
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 4px;
    width: 40px;
    aspect-ratio: 1;
    padding-left: 8px;
    /*color: var(--color-light);*/
    background-color: transparent;
    border: black 1px solid;
    transition-duration: var(--transition-duration);
}

.header__menu:hover .header__menu-toggle {
    transform: scale(120%);
}

.header__menu-toggle-line {
    width: 16px;
    height: 1px;
    background-color: currentColor;
}

.translations {
    display: flex;
    justify-content: center;
}

.translations__list {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.translations__item {
    display: flex;
    flex-direction: column;
}

.translations__item-link {
    align-self: flex-end;
}

.tra







